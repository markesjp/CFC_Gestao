/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Telas;

import static CodigosAuxiliares.GeraListas.*;
import java.sql.SQLException;
import java.util.Date;
import java.util.GregorianCalendar;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import Objetos.Aula;
import Objetos.Instrutor;
import Objetos.Veiculo;
import Objetos.Time;
import Persistencia.IncluirEditarDAO;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Pedrinho
 */
public class Quadro extends javax.swing.JFrame {

    /**
     * Creates new form Quadro
     *
     * @throws java.sql.SQLException
     */
    Date hoje = new Date();
    ArrayList<Aula> listAulaSemana = new ArrayList();
    ArrayList<Veiculo> listMoto = new ArrayList();
    GregorianCalendar gc = new GregorianCalendar();
    static GregorianCalendar ghj = new GregorianCalendar();
    int semanaDoAno = gc.get(GregorianCalendar.WEEK_OF_YEAR);
    int semanaAtual = semanaDoAno;
    int semanasNoano = gc.getMaximum(GregorianCalendar.WEEK_OF_YEAR);
    static boolean motoPista;

    public Quadro() {

        try {
            initComponents();
            motoPista = false;
            this.setExtendedState(Quadro.MAXIMIZED_BOTH);
            preencherComboBox();
            l_semana.setText("Semana " + semanaAtual + " atual");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tab_quadro = new javax.swing.JTabbedPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        p_inst = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tb_quadro = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        bt_addAula = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        bt_editarAula = new javax.swing.JButton();
        bt_atualizarQuadro = new javax.swing.JButton();
        cbx_instrutor = new javax.swing.JComboBox<>();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        l_semana = new javax.swing.JLabel();
        jToggleButton1 = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tab_quadro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tab_quadroMouseClicked(evt);
            }
        });

        p_inst.setLayout(null);

        tb_quadro.setAutoCreateRowSorter(true);
        tb_quadro.setFont(new java.awt.Font("DejaVu Serif", 0, 11)); // NOI18N
        tb_quadro.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Horário", "Segunda", "Terça", "Quarta", "Quinta", "Sexta", "Sábado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tb_quadro.setAlignmentX(0.1F);
        tb_quadro.setAlignmentY(0.1F);
        tb_quadro.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_LAST_COLUMN);
        tb_quadro.setColumnSelectionAllowed(true);
        tb_quadro.setRowHeight(37);
        tb_quadro.setRowMargin(1);
        tb_quadro.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tb_quadro.setShowHorizontalLines(true);
        tb_quadro.setShowVerticalLines(true);
        tb_quadro.getTableHeader().setReorderingAllowed(false);
        tb_quadro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tb_quadroKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tb_quadro);
        tb_quadro.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (tb_quadro.getColumnModel().getColumnCount() > 0) {
            tb_quadro.getColumnModel().getColumn(0).setResizable(false);
            tb_quadro.getColumnModel().getColumn(0).setPreferredWidth(40);
        }

        p_inst.add(jScrollPane1);
        jScrollPane1.setBounds(10, 20, 1060, 620);

        jButton1.setText("Sair");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        p_inst.add(jButton1);
        jButton1.setBounds(1180, 620, 150, 30);

        bt_addAula.setText("Add. Aula");
        bt_addAula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_addAulaActionPerformed(evt);
            }
        });
        p_inst.add(bt_addAula);
        bt_addAula.setBounds(1220, 20, 110, 32);

        jButton2.setText("Concretizar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        p_inst.add(jButton2);
        jButton2.setBounds(1090, 20, 110, 32);

        bt_editarAula.setText("Editar Aula");
        bt_editarAula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_editarAulaActionPerformed(evt);
            }
        });
        p_inst.add(bt_editarAula);
        bt_editarAula.setBounds(1090, 70, 110, 30);

        bt_atualizarQuadro.setText("Atualizar");
        bt_atualizarQuadro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_atualizarQuadroActionPerformed(evt);
            }
        });
        p_inst.add(bt_atualizarQuadro);
        bt_atualizarQuadro.setBounds(1220, 70, 110, 30);

        cbx_instrutor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbx_instrutorActionPerformed(evt);
            }
        });
        p_inst.add(cbx_instrutor);
        cbx_instrutor.setBounds(1090, 120, 240, 22);

        jButton3.setText("Anterior");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        p_inst.add(jButton3);
        jButton3.setBounds(1110, 410, 100, 30);

        jButton4.setText("Próxima");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        p_inst.add(jButton4);
        jButton4.setBounds(1230, 410, 100, 30);

        l_semana.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        l_semana.setText("Semana ");
        p_inst.add(l_semana);
        l_semana.setBounds(1170, 380, 160, 30);

        jToggleButton1.setText("Moto-Pista");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });
        p_inst.add(jToggleButton1);
        jToggleButton1.setBounds(1090, 160, 240, 30);

        jScrollPane2.setViewportView(p_inst);

        tab_quadro.addTab("Quadro de Horário", jScrollPane2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tab_quadro, javax.swing.GroupLayout.DEFAULT_SIZE, 1348, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tab_quadro, javax.swing.GroupLayout.DEFAULT_SIZE, 704, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bt_editarAulaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_editarAulaActionPerformed
        try {
            Consulta consulta = new Consulta(4);
            consulta.setVisible(true);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_bt_editarAulaActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void bt_addAulaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_addAulaActionPerformed
        try {
            MarcarAula marcarAula = new MarcarAula();
            marcarAula.setVisible(true);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_bt_addAulaActionPerformed

    private void bt_atualizarQuadroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_atualizarQuadroActionPerformed
        // TODO add your handling code here:
        atualizarTabQuadro(getInstrutor(), motoPista);

    }//GEN-LAST:event_bt_atualizarQuadroActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            // TODO add your handling code here:
            concretizarAula();

        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void cbx_instrutorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbx_instrutorActionPerformed
        // TODO add your handling code here:
        Instrutor inst = (Instrutor) cbx_instrutor.getSelectedItem();
        atualizarTabQuadro(inst, motoPista);

    }//GEN-LAST:event_cbx_instrutorActionPerformed

    private void tb_quadroKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tb_quadroKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == 10) {
            try {
                // TODO add your handling code here:
                concretizarAula();
            } catch (ParseException ex) {
                Logger.getLogger(Quadro.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_tb_quadroKeyPressed

    private void tab_quadroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tab_quadroMouseClicked

    }//GEN-LAST:event_tab_quadroMouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        if (semanaDoAno > 1) {
            semanaDoAno--;
            if (semanaDoAno == semanaAtual) {
                l_semana.setText("Semana " + semanaDoAno + " atual");
            } else {
                l_semana.setText("Semana " + semanaDoAno);
            }
            atualizarTabQuadro(getInstrutor(), motoPista);
        } else {
            JOptionPane.showMessageDialog(null, "Essa já é a primeira semana");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:       
        if (semanaDoAno < semanasNoano) {
            semanaDoAno++;
            if (semanaDoAno == semanaAtual) {
                l_semana.setText("Semana " + semanaDoAno + " atual");
            } else {
                l_semana.setText("Semana " + semanaDoAno);
            }
            atualizarTabQuadro(getInstrutor(), motoPista);
        } else {
            JOptionPane.showMessageDialog(null, "Essa já é a última semana");
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        try {
            // TODO add your handling code here:
            motoPista = motoPista == false;
            geraListaAula();
            geraListaVei();
            atualizarTabQuadro(getInstrutor(), motoPista);
        } catch (SQLException ex) {
            Logger.getLogger(Quadro.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Quadro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Quadro().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_addAula;
    private javax.swing.JButton bt_atualizarQuadro;
    private javax.swing.JButton bt_editarAula;
    private javax.swing.JComboBox<Instrutor> cbx_instrutor;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JLabel l_semana;
    private javax.swing.JPanel p_inst;
    private javax.swing.JTabbedPane tab_quadro;
    private javax.swing.JTable tb_quadro;
    // End of variables declaration//GEN-END:variables

    public void atualizarTabQuadro(Instrutor arg, boolean motoPista) {
        
        DefaultTableModel mp1 = (DefaultTableModel) tb_quadro.getModel();
        int l = mp1.getRowCount();
        if (l > 0) {
            while (l > 0) {
                ((DefaultTableModel) tb_quadro.getModel()).removeRow(l - 1);
                l--;
            }
        }
        DefaultTableModel mp = (DefaultTableModel) tb_quadro.getModel();
        gc.setTime(hoje);
        listAulaSemana.clear();
        for (Aula aula : listAula) {
            gc.setTime(aula.getData());
            int semanaDaAula = gc.get(GregorianCalendar.WEEK_OF_YEAR);
            if (semanaDoAno == semanaDaAula) {
                if (arg.getId() == aula.getInstrutor().getId()) {
                    listAulaSemana.add(aula);
                }
            }
        }

        String Coluna0;
        int k = 0;
        if (motoPista) {
            Aula Coluna[] = new Aula[8];
            geraListaMoto();
            String str;
            for (Time hora : listHorario) {
                while (k < listMoto.size()) {
                    str = hora.toString();
                    Coluna0 = hora.toString() + " " + listMoto.get(k).getPlaca();
                    for (Aula aula : listAulaSemana) {
                        if (aula.getVeiculo().getTipo().toUpperCase().equals("MOTO")) {
                            String horario = aula.getHorario();
                            if (horario.equals(str)) {
                                if (aula.getVeiculo().getPlaca().equals(listMoto.get(k).getPlaca())) {
                                    gc.setTime(aula.getData());
                                    int diaDaSemana = gc.get(GregorianCalendar.DAY_OF_WEEK);
                                    Coluna[diaDaSemana - 1] = aula;
                                    Coluna[diaDaSemana - 1].setMotoPista(!motoPista);
                                }
                            }
                        }
                    }
                    k++;
                    mp.addRow(new Object[]{Coluna0, Coluna[1], Coluna[2], Coluna[3], Coluna[4], Coluna[5], Coluna[6], Coluna[7]});
                    for (int j = 1; j < 8; j++) {
                        Coluna[j] = null;
                    }
                }
                k = 0;
            }
            tb_quadro.setRowHeight(30);

        } else {
            Aula Coluna[] = new Aula[8];
            for (Time hora : listHorario) {
                Coluna0 = hora.toString();
                for (Aula element : listAulaSemana) {
                    String horario = element.getHorario();
                    if (horario.equals(Coluna0)) {
                        gc.setTime(element.getData());
                        int diaDaSemana = gc.get(GregorianCalendar.DAY_OF_WEEK);
                        Coluna[diaDaSemana - 1] = element;
                    }
                }
                mp.addRow(new Object[]{Coluna0, Coluna[1], Coluna[2], Coluna[3], Coluna[4], Coluna[5], Coluna[6], Coluna[7]});
                for (int j = 1; j < 8; j++) {
                    Coluna[j] = null;
                }
            }
            tb_quadro.setRowHeight(46);
        }
        tb_quadro.setAutoCreateRowSorter(true);
    }

    public void concretizarAula() throws ParseException {
        int row = tb_quadro.getSelectedRow();
        int col = tb_quadro.getSelectedColumn();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "Nenhuma célula foi selecionada");

        } else {
            Aula obj = (Aula) tb_quadro.getValueAt(row, col);
            if (obj == null) {
                JOptionPane.showMessageDialog(null, "Aula inexistente");
            } else {
                try {
                    obj.setConcretizada(true);
                    IncluirEditarDAO iedao = new IncluirEditarDAO();
                    getInstrutor().darAula();
                    iedao.Editar(obj);
                    iedao.Editar(getInstrutor());
                    JOptionPane.showMessageDialog(null, "Aula feita com sucesso");
                    atualizarTabQuadro(getInstrutor(), motoPista);
                } catch (SQLException ex) {
                    Logger.getLogger(Quadro.class.getName()).log(Level.SEVERE, null, ex);
                }

            }
        }
    }

    public void preencherComboBox() throws SQLException {
        geraListaInst();
        for (Instrutor instrutor : listInst) {
            cbx_instrutor.addItem(instrutor);
        }
    }

    public Instrutor getInstrutor() {
        Instrutor inst = (Instrutor) cbx_instrutor.getSelectedItem();
        return inst;
    }

    public void geraListaMoto() {
        listMoto.clear();
        for (Veiculo veiculo : listVei) {
            if (veiculo.getTipo().equals("MOTO")) {
                listMoto.add(veiculo);
            }
        }
    }
}
